{"ast":null,"code":"var _jsxFileName = \"/home/adriel/Documents/Web development/The Odin Project/NODEJS TRACK/Blog-API/frontend/src/components/Comments.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { ListGroup, ListGroupItem, ListGroupItemHeading, ListGroupItemText, Button, Form, FormGroup, Label, Input } from \"reactstrap\";\nimport \"../App.css\";\nimport axios from 'axios';\nimport { v4 as uuid } from \"uuid\";\n\nconst Comment = props => /*#__PURE__*/React.createElement(ListGroupItem, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(ListGroupItemHeading, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }\n}, props.el.title), /*#__PURE__*/React.createElement(ListGroupItemText, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }\n}, props.el.date), /*#__PURE__*/React.createElement(ListGroupItemText, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }\n}, props.el.body));\n\nexport default function Comments({\n  id\n}) {\n  const [comment, setComment] = useState([]);\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState(''); //RETRIEVE COMMENTS FROM DATABASE\n\n  useEffect(() => {\n    getBlogPost();\n  }, []); //Get data from server\n\n  const getBlogPost = () => {\n    axios(\"http://localhost:8080/api/blogs/\" + id + \"/comments\").then(response => {\n      const data = response.data;\n      setComment(data); //console.log('data has been received',data)\n    }).catch(err => {\n      console.log('error retrieving data', err);\n    });\n  };\n\n  const commentList = () => {\n    return comment.map(el => {\n      return /*#__PURE__*/React.createElement(Comment, {\n        el: el,\n        key: uuid(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 20\n        }\n      });\n    });\n  }; ///HANDLE FORM submit\n\n\n  const handleForm = e => {\n    e.preventDefault();\n    const newComment = {\n      title,\n      body\n    }; //console.log(comment)\n\n    axios.post(\"http://localhost:8080/api/blogs/\" + id + \"/comments\", newComment).then(function (response) {\n      resetUserInputs();\n      getBlogPost();\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }; ///Form reset handler\n\n\n  const resetUserInputs = () => {\n    setTitle('');\n    setBody('');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"CommentContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, \" Comments \"), /*#__PURE__*/React.createElement(ListGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, typeof commentList() !== \"undefined\" ? commentList() : \"no comments yet...\"), /*#__PURE__*/React.createElement(Form, {\n    className: \"CommentForm\",\n    onSubmit: handleForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, \"Please leave a comment: \"), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"title\",\n    id: \"title\",\n    placeholder: \"Enter the title of the comment\",\n    onChange: e => setTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, \"Text Area\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    name: \"body\",\n    id: \"body\",\n    onChange: e => setBody(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, \"Submit\")));\n}","map":{"version":3,"sources":["/home/adriel/Documents/Web development/The Odin Project/NODEJS TRACK/Blog-API/frontend/src/components/Comments.js"],"names":["React","useState","useEffect","ListGroup","ListGroupItem","ListGroupItemHeading","ListGroupItemText","Button","Form","FormGroup","Label","Input","axios","v4","uuid","Comment","props","el","title","date","body","Comments","id","comment","setComment","setTitle","setBody","getBlogPost","then","response","data","catch","err","console","log","commentList","map","handleForm","e","preventDefault","newComment","post","resetUserInputs","error","target","value"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from \"react\";\nimport {\n  ListGroup,\n  ListGroupItem,\n  ListGroupItemHeading,\n  ListGroupItemText,\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input\n} from \"reactstrap\";\nimport \"../App.css\";\nimport axios from 'axios';\nimport { v4 as uuid } from \"uuid\";\n\nconst Comment= (props) =>(\n    <ListGroupItem >\n    <ListGroupItemHeading>{props.el.title}</ListGroupItemHeading>\n    <ListGroupItemText>{props.el.date}</ListGroupItemText>\n    <ListGroupItemText>{props.el.body}</ListGroupItemText>\n  </ListGroupItem>\n)\n\nexport default function Comments({id}) {\n    const [comment, setComment]=useState([]);\n    const [title, setTitle]=useState('');\n    const [body, setBody]=useState('');\n\n\n\n    //RETRIEVE COMMENTS FROM DATABASE\n     useEffect(() => {\n      getBlogPost()\n      }, []);\n\n\n        //Get data from server\n  const getBlogPost = () =>{\n    axios(\"http://localhost:8080/api/blogs/\"+id+\"/comments\")\n    .then((response) => {\n      const data= response.data;\n      setComment(data)\n      //console.log('data has been received',data)\n    })\n    .catch((err) => { console.log('error retrieving data',err)}) \n    };\n  \n\n \n\n      const commentList= () =>{\n        return comment.map(el =>{\n           return  <Comment el={el} key={uuid()} />\n        })\n    }\n\n\n  \n\n    ///HANDLE FORM submit\n    const handleForm =(e) =>{\n      e.preventDefault();\n      const newComment ={title,body }\n      //console.log(comment)\n\n      axios.post(\"http://localhost:8080/api/blogs/\"+id+\"/comments\", newComment)\n      .then(function (response) {\n        resetUserInputs();\n        getBlogPost();\n        console.log(response);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n    }\n\n      ///Form reset handler\n  const resetUserInputs = () =>{\n    setTitle('')\n    setBody('')\n  }\n\n\n\n  return (\n    <div className=\"CommentContainer\">\n      <h4> Comments </h4>\n\n      <ListGroup >\n        {(typeof commentList() !== \"undefined\")? commentList() : \"no comments yet...\"\n    \n        }   \n\n      </ListGroup>\n\n      <Form className='CommentForm' onSubmit={handleForm}>\n      <p>Please leave a comment: </p>\n      <FormGroup>\n        <Label for=\"title\">Title</Label>\n        <Input type=\"text\" name=\"title\" id=\"title\" placeholder=\"Enter the title of the comment\" onChange={(e) => setTitle(e.target.value)}/>\n      </FormGroup>\n \n      <FormGroup>\n        <Label for=\"body\">Text Area</Label>\n        <Input type=\"textarea\" name=\"body\" id=\"body\" onChange={(e) => setBody(e.target.value)}/>\n      </FormGroup>\n      <Button>Submit</Button>\n    </Form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}