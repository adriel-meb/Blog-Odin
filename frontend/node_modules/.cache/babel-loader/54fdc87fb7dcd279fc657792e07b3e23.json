{"ast":null,"code":"var _jsxFileName = \"/home/adriel/Documents/Web development/The Odin Project/NODEJS TRACK/Blog-API/frontend/src/components/Comments.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { ListGroup, ListGroupItem, ListGroupItemHeading, ListGroupItemText, Button, Form, FormGroup, Label, Input } from \"reactstrap\";\nimport \"../App.css\";\nimport axios from 'axios';\n\nconst Comment = props => /*#__PURE__*/React.createElement(ListGroupItem, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(ListGroupItemHeading, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }\n}, props.el.title), /*#__PURE__*/React.createElement(ListGroupItemText, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }\n}, props.el.date), /*#__PURE__*/React.createElement(ListGroupItemText, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }\n}, props.el.body));\n\nexport default function Comments({\n  id\n}) {\n  const [comment, setComment] = useState([]); //RETRIEVE COMMENTS FROM DATABASE\n\n  useEffect(() => {\n    axios.get(\"http://localhost:8080/api/blogs/\" + id + \"/comments\").then(function (res) {\n      const data = res.data;\n      setComment(data); //console.log(data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n\n  const commentList = () => {\n    return comment.map(el => {\n      return /*#__PURE__*/React.createElement(Comment, {\n        el: el,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 20\n        }\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"CommentContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \" Comments id= \", id, \" \"), /*#__PURE__*/React.createElement(ListGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, typeof commentList() != \"undefined\" ? commentList() : \"no comments...\"), /*#__PURE__*/React.createElement(Form, {\n    className: \"CommentForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"Please leave a comment: \"), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"exampleEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"email\",\n    name: \"email\",\n    id: \"exampleEmail\",\n    placeholder: \"with a placeholder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"examplePassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    name: \"password\",\n    id: \"examplePassword\",\n    placeholder: \"password placeholder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"exampleText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Text Area\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    name: \"text\",\n    id: \"exampleText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, \"Submit\")));\n}","map":{"version":3,"sources":["/home/adriel/Documents/Web development/The Odin Project/NODEJS TRACK/Blog-API/frontend/src/components/Comments.js"],"names":["React","useState","useEffect","ListGroup","ListGroupItem","ListGroupItemHeading","ListGroupItemText","Button","Form","FormGroup","Label","Input","axios","Comment","props","el","title","date","body","Comments","id","comment","setComment","get","then","res","data","catch","error","console","log","commentList","map"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from \"react\";\nimport {\n  ListGroup,\n  ListGroupItem,\n  ListGroupItemHeading,\n  ListGroupItemText,\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input\n} from \"reactstrap\";\nimport \"../App.css\";\nimport axios from 'axios';\n\nconst Comment= (props) =>(\n    <ListGroupItem >\n    <ListGroupItemHeading>{props.el.title}</ListGroupItemHeading>\n    <ListGroupItemText>{props.el.date}</ListGroupItemText>\n    <ListGroupItemText>{props.el.body}</ListGroupItemText>\n  </ListGroupItem>\n)\n\nexport default function Comments({id}) {\n    const [comment, setComment]=useState([])\n\n\n\n    //RETRIEVE COMMENTS FROM DATABASE\n     useEffect(() => {\n        axios\n        .get(\"http://localhost:8080/api/blogs/\"+id+\"/comments\")\n        .then(function (res) {\n            const data= res.data;\n           setComment(data);\n            //console.log(data);\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n      }, []);\n \n\n      const commentList= () =>{\n        return comment.map(el =>{\n           return  <Comment el={el} />\n        })\n    }\n\n\n  return (\n    <div className=\"CommentContainer\">\n      <h4> Comments id= {id} </h4>\n\n      <ListGroup>\n        {(typeof commentList() != \"undefined\")? commentList() : \"no comments...\"\n    \n        }   \n\n      </ListGroup>\n\n      <Form className='CommentForm'>\n      <p>Please leave a comment: </p>\n      <FormGroup>\n        <Label for=\"exampleEmail\">Email</Label>\n        <Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"with a placeholder\" />\n      </FormGroup>\n      <FormGroup>\n        <Label for=\"examplePassword\">Password</Label>\n        <Input type=\"password\" name=\"password\" id=\"examplePassword\" placeholder=\"password placeholder\" />\n      </FormGroup>\n      <FormGroup>\n        <Label for=\"exampleText\">Text Area</Label>\n        <Input type=\"textarea\" name=\"text\" id=\"exampleText\" />\n      </FormGroup>\n      <Button>Submit</Button>\n    </Form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}